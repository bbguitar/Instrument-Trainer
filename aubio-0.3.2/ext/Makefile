# Makefile.in generated by automake 1.8.5 from Makefile.am.
# ext/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




SOURCES = $(libaubioext_la_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/aubio
pkglibdir = $(libdir)/aubio
pkgincludedir = $(includedir)/aubio
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
subdir = ext
DIST_COMMON = $(pkginclude_HEADERS) $(pkgincludemidi_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludemididir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libaubioext_la_DEPENDENCIES = 
am_libaubioext_la_OBJECTS = jackio.lo sndfileio.lo midi.lo list.lo \
	timer.lo midi_alsa_seq.lo midi_alsa_raw.lo midi_file.lo \
	midi_event.lo midi_track.lo midi_player.lo midi_parser.lo \
	midi_driver.lo
libaubioext_la_OBJECTS = $(am_libaubioext_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/jackio.Plo ./$(DEPDIR)/list.Plo \
	./$(DEPDIR)/midi.Plo ./$(DEPDIR)/midi_alsa_raw.Plo \
	./$(DEPDIR)/midi_alsa_seq.Plo \
	./$(DEPDIR)/midi_driver.Plo \
	./$(DEPDIR)/midi_event.Plo \
	./$(DEPDIR)/midi_file.Plo \
	./$(DEPDIR)/midi_parser.Plo \
	./$(DEPDIR)/midi_player.Plo \
	./$(DEPDIR)/midi_track.Plo \
	./$(DEPDIR)/sndfileio.Plo ./$(DEPDIR)/timer.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libaubioext_la_SOURCES)
DIST_SOURCES = $(libaubioext_la_SOURCES)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
pkgincludemidiHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS) $(pkgincludemidi_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run aclocal-1.8
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_LIBS = -lasound  
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run tar
AR = ar
AUBIO_CFLAGS =  -Wall -Wextra
AUTOCONF = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run automake-1.8
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
COMPILE_TESTS_FALSE = 
COMPILE_TESTS_TRUE = #
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DARWIN_FALSE = 
DARWIN_TRUE = #
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOCBOOKFOUND_FALSE = 
DOCBOOKFOUND_TRUE = #
DOCBOOK_TO_MAN = no
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
FFTWLIB_CFLAGS =  
FFTWLIB_LIBS = -lfftw3f -lm  
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JACK_CFLAGS =  
JACK_LIBS = -ljack -lpthread -lrt  
LASH_CFLAGS = 
LASH_LIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS = -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/missing --run makeinfo
MINGW_FALSE = 
MINGW_TRUE = #
OBJEXT = o
PACKAGE = aubio
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PUREDATAFOUND_FALSE = 
PUREDATAFOUND_TRUE = #
PYTHON = /usr/bin/python
PYTHONFOUND_FALSE = #
PYTHONFOUND_TRUE = 
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.6
RANLIB = ranlib
SAMPLERATE_CFLAGS =  
SAMPLERATE_LIBS = -lsamplerate  
SET_MAKE = 
SHARED_VERSION_INFO = 3:1:1
SHELL = /bin/sh
SNDLIB_CFLAGS =  
SNDLIB_LIBS = -lsndfile  
STRIP = strip
SWIG = /usr/bin/swig
SWIGFOUND_FALSE = #
SWIGFOUND_TRUE = 
VERSION = 0.3.2
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/elserj/projects/Instrument-Trainer/aubio-0.3.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/aubio
pkgpythondir = ${pythondir}/aubio
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.6/site-packages
pythondir = ${prefix}/lib/python2.6/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
pkginclude_HEADERS = \
	aubioext.h \
	jackio.h \
	sndfileio.h

pkgincludemididir = $(pkgincludedir)/midi
pkgincludemidi_HEADERS = \
	midi/midi.h \
	midi/list.h \
	midi/timer.h \
	midi/midi_file.h \
	midi/midi_driver.h \
	midi/midi_event.h \
	midi/midi_track.h \
	midi/midi_player.h \
	midi/midi_parser.h

lib_LTLIBRARIES = libaubioext.la 
libaubioext_la_SOURCES = aubioext.h \
	jackio.c \
	jackio.h \
	sndfileio.c \
	sndfileio.h \
	midi/midi.c \
	midi/midi.h \
	midi/list.c \
	midi/list.h \
	midi/timer.c \
	midi/timer.h \
	midi/midi_alsa_seq.c \
	midi/midi_alsa_raw.c \
	midi/midi_file.c \
	midi/midi_file.h \
	midi/midi_event.c \
	midi/midi_event.h \
	midi/midi_track.c \
	midi/midi_track.h \
	midi/midi_player.c \
	midi/midi_player.h \
	midi/midi_parser.c \
	midi/midi_parser.h \
	midi/midi_driver.h \
	midi/midi_driver.c

AM_CFLAGS = -I$(top_srcdir)/src  -Wall -Wextra         -I/usr/include/alsa  
libaubioext_la_LIBADD = -laubio -L${top_builddir}/src -lsndfile   -ljack -lpthread -lrt   -lfftw3f -lm   -lsamplerate   -lasound   
libaubioext_la_LDFLAGS = -version-info 3:1:1
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  ext/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  ext/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libaubioext.la: $(libaubioext_la_OBJECTS) $(libaubioext_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libaubioext_la_LDFLAGS) $(libaubioext_la_OBJECTS) $(libaubioext_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/jackio.Plo
include ./$(DEPDIR)/list.Plo
include ./$(DEPDIR)/midi.Plo
include ./$(DEPDIR)/midi_alsa_raw.Plo
include ./$(DEPDIR)/midi_alsa_seq.Plo
include ./$(DEPDIR)/midi_driver.Plo
include ./$(DEPDIR)/midi_event.Plo
include ./$(DEPDIR)/midi_file.Plo
include ./$(DEPDIR)/midi_parser.Plo
include ./$(DEPDIR)/midi_player.Plo
include ./$(DEPDIR)/midi_track.Plo
include ./$(DEPDIR)/sndfileio.Plo
include ./$(DEPDIR)/timer.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

midi.o: midi/midi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi.o -MD -MP -MF "$(DEPDIR)/midi.Tpo" -c -o midi.o `test -f 'midi/midi.c' || echo '$(srcdir)/'`midi/midi.c; \
	then mv -f "$(DEPDIR)/midi.Tpo" "$(DEPDIR)/midi.Po"; else rm -f "$(DEPDIR)/midi.Tpo"; exit 1; fi
#	source='midi/midi.c' object='midi.o' libtool=no \
#	depfile='$(DEPDIR)/midi.Po' tmpdepfile='$(DEPDIR)/midi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi.o `test -f 'midi/midi.c' || echo '$(srcdir)/'`midi/midi.c

midi.obj: midi/midi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi.obj -MD -MP -MF "$(DEPDIR)/midi.Tpo" -c -o midi.obj `if test -f 'midi/midi.c'; then $(CYGPATH_W) 'midi/midi.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi.c'; fi`; \
	then mv -f "$(DEPDIR)/midi.Tpo" "$(DEPDIR)/midi.Po"; else rm -f "$(DEPDIR)/midi.Tpo"; exit 1; fi
#	source='midi/midi.c' object='midi.obj' libtool=no \
#	depfile='$(DEPDIR)/midi.Po' tmpdepfile='$(DEPDIR)/midi.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi.obj `if test -f 'midi/midi.c'; then $(CYGPATH_W) 'midi/midi.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi.c'; fi`

midi.lo: midi/midi.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi.lo -MD -MP -MF "$(DEPDIR)/midi.Tpo" -c -o midi.lo `test -f 'midi/midi.c' || echo '$(srcdir)/'`midi/midi.c; \
	then mv -f "$(DEPDIR)/midi.Tpo" "$(DEPDIR)/midi.Plo"; else rm -f "$(DEPDIR)/midi.Tpo"; exit 1; fi
#	source='midi/midi.c' object='midi.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi.Plo' tmpdepfile='$(DEPDIR)/midi.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi.lo `test -f 'midi/midi.c' || echo '$(srcdir)/'`midi/midi.c

list.o: midi/list.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT list.o -MD -MP -MF "$(DEPDIR)/list.Tpo" -c -o list.o `test -f 'midi/list.c' || echo '$(srcdir)/'`midi/list.c; \
	then mv -f "$(DEPDIR)/list.Tpo" "$(DEPDIR)/list.Po"; else rm -f "$(DEPDIR)/list.Tpo"; exit 1; fi
#	source='midi/list.c' object='list.o' libtool=no \
#	depfile='$(DEPDIR)/list.Po' tmpdepfile='$(DEPDIR)/list.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list.o `test -f 'midi/list.c' || echo '$(srcdir)/'`midi/list.c

list.obj: midi/list.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT list.obj -MD -MP -MF "$(DEPDIR)/list.Tpo" -c -o list.obj `if test -f 'midi/list.c'; then $(CYGPATH_W) 'midi/list.c'; else $(CYGPATH_W) '$(srcdir)/midi/list.c'; fi`; \
	then mv -f "$(DEPDIR)/list.Tpo" "$(DEPDIR)/list.Po"; else rm -f "$(DEPDIR)/list.Tpo"; exit 1; fi
#	source='midi/list.c' object='list.obj' libtool=no \
#	depfile='$(DEPDIR)/list.Po' tmpdepfile='$(DEPDIR)/list.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list.obj `if test -f 'midi/list.c'; then $(CYGPATH_W) 'midi/list.c'; else $(CYGPATH_W) '$(srcdir)/midi/list.c'; fi`

list.lo: midi/list.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT list.lo -MD -MP -MF "$(DEPDIR)/list.Tpo" -c -o list.lo `test -f 'midi/list.c' || echo '$(srcdir)/'`midi/list.c; \
	then mv -f "$(DEPDIR)/list.Tpo" "$(DEPDIR)/list.Plo"; else rm -f "$(DEPDIR)/list.Tpo"; exit 1; fi
#	source='midi/list.c' object='list.lo' libtool=yes \
#	depfile='$(DEPDIR)/list.Plo' tmpdepfile='$(DEPDIR)/list.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o list.lo `test -f 'midi/list.c' || echo '$(srcdir)/'`midi/list.c

timer.o: midi/timer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT timer.o -MD -MP -MF "$(DEPDIR)/timer.Tpo" -c -o timer.o `test -f 'midi/timer.c' || echo '$(srcdir)/'`midi/timer.c; \
	then mv -f "$(DEPDIR)/timer.Tpo" "$(DEPDIR)/timer.Po"; else rm -f "$(DEPDIR)/timer.Tpo"; exit 1; fi
#	source='midi/timer.c' object='timer.o' libtool=no \
#	depfile='$(DEPDIR)/timer.Po' tmpdepfile='$(DEPDIR)/timer.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o timer.o `test -f 'midi/timer.c' || echo '$(srcdir)/'`midi/timer.c

timer.obj: midi/timer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT timer.obj -MD -MP -MF "$(DEPDIR)/timer.Tpo" -c -o timer.obj `if test -f 'midi/timer.c'; then $(CYGPATH_W) 'midi/timer.c'; else $(CYGPATH_W) '$(srcdir)/midi/timer.c'; fi`; \
	then mv -f "$(DEPDIR)/timer.Tpo" "$(DEPDIR)/timer.Po"; else rm -f "$(DEPDIR)/timer.Tpo"; exit 1; fi
#	source='midi/timer.c' object='timer.obj' libtool=no \
#	depfile='$(DEPDIR)/timer.Po' tmpdepfile='$(DEPDIR)/timer.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o timer.obj `if test -f 'midi/timer.c'; then $(CYGPATH_W) 'midi/timer.c'; else $(CYGPATH_W) '$(srcdir)/midi/timer.c'; fi`

timer.lo: midi/timer.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT timer.lo -MD -MP -MF "$(DEPDIR)/timer.Tpo" -c -o timer.lo `test -f 'midi/timer.c' || echo '$(srcdir)/'`midi/timer.c; \
	then mv -f "$(DEPDIR)/timer.Tpo" "$(DEPDIR)/timer.Plo"; else rm -f "$(DEPDIR)/timer.Tpo"; exit 1; fi
#	source='midi/timer.c' object='timer.lo' libtool=yes \
#	depfile='$(DEPDIR)/timer.Plo' tmpdepfile='$(DEPDIR)/timer.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o timer.lo `test -f 'midi/timer.c' || echo '$(srcdir)/'`midi/timer.c

midi_alsa_seq.o: midi/midi_alsa_seq.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_seq.o -MD -MP -MF "$(DEPDIR)/midi_alsa_seq.Tpo" -c -o midi_alsa_seq.o `test -f 'midi/midi_alsa_seq.c' || echo '$(srcdir)/'`midi/midi_alsa_seq.c; \
	then mv -f "$(DEPDIR)/midi_alsa_seq.Tpo" "$(DEPDIR)/midi_alsa_seq.Po"; else rm -f "$(DEPDIR)/midi_alsa_seq.Tpo"; exit 1; fi
#	source='midi/midi_alsa_seq.c' object='midi_alsa_seq.o' libtool=no \
#	depfile='$(DEPDIR)/midi_alsa_seq.Po' tmpdepfile='$(DEPDIR)/midi_alsa_seq.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_seq.o `test -f 'midi/midi_alsa_seq.c' || echo '$(srcdir)/'`midi/midi_alsa_seq.c

midi_alsa_seq.obj: midi/midi_alsa_seq.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_seq.obj -MD -MP -MF "$(DEPDIR)/midi_alsa_seq.Tpo" -c -o midi_alsa_seq.obj `if test -f 'midi/midi_alsa_seq.c'; then $(CYGPATH_W) 'midi/midi_alsa_seq.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_alsa_seq.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_alsa_seq.Tpo" "$(DEPDIR)/midi_alsa_seq.Po"; else rm -f "$(DEPDIR)/midi_alsa_seq.Tpo"; exit 1; fi
#	source='midi/midi_alsa_seq.c' object='midi_alsa_seq.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_alsa_seq.Po' tmpdepfile='$(DEPDIR)/midi_alsa_seq.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_seq.obj `if test -f 'midi/midi_alsa_seq.c'; then $(CYGPATH_W) 'midi/midi_alsa_seq.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_alsa_seq.c'; fi`

midi_alsa_seq.lo: midi/midi_alsa_seq.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_seq.lo -MD -MP -MF "$(DEPDIR)/midi_alsa_seq.Tpo" -c -o midi_alsa_seq.lo `test -f 'midi/midi_alsa_seq.c' || echo '$(srcdir)/'`midi/midi_alsa_seq.c; \
	then mv -f "$(DEPDIR)/midi_alsa_seq.Tpo" "$(DEPDIR)/midi_alsa_seq.Plo"; else rm -f "$(DEPDIR)/midi_alsa_seq.Tpo"; exit 1; fi
#	source='midi/midi_alsa_seq.c' object='midi_alsa_seq.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_alsa_seq.Plo' tmpdepfile='$(DEPDIR)/midi_alsa_seq.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_seq.lo `test -f 'midi/midi_alsa_seq.c' || echo '$(srcdir)/'`midi/midi_alsa_seq.c

midi_alsa_raw.o: midi/midi_alsa_raw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_raw.o -MD -MP -MF "$(DEPDIR)/midi_alsa_raw.Tpo" -c -o midi_alsa_raw.o `test -f 'midi/midi_alsa_raw.c' || echo '$(srcdir)/'`midi/midi_alsa_raw.c; \
	then mv -f "$(DEPDIR)/midi_alsa_raw.Tpo" "$(DEPDIR)/midi_alsa_raw.Po"; else rm -f "$(DEPDIR)/midi_alsa_raw.Tpo"; exit 1; fi
#	source='midi/midi_alsa_raw.c' object='midi_alsa_raw.o' libtool=no \
#	depfile='$(DEPDIR)/midi_alsa_raw.Po' tmpdepfile='$(DEPDIR)/midi_alsa_raw.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_raw.o `test -f 'midi/midi_alsa_raw.c' || echo '$(srcdir)/'`midi/midi_alsa_raw.c

midi_alsa_raw.obj: midi/midi_alsa_raw.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_raw.obj -MD -MP -MF "$(DEPDIR)/midi_alsa_raw.Tpo" -c -o midi_alsa_raw.obj `if test -f 'midi/midi_alsa_raw.c'; then $(CYGPATH_W) 'midi/midi_alsa_raw.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_alsa_raw.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_alsa_raw.Tpo" "$(DEPDIR)/midi_alsa_raw.Po"; else rm -f "$(DEPDIR)/midi_alsa_raw.Tpo"; exit 1; fi
#	source='midi/midi_alsa_raw.c' object='midi_alsa_raw.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_alsa_raw.Po' tmpdepfile='$(DEPDIR)/midi_alsa_raw.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_raw.obj `if test -f 'midi/midi_alsa_raw.c'; then $(CYGPATH_W) 'midi/midi_alsa_raw.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_alsa_raw.c'; fi`

midi_alsa_raw.lo: midi/midi_alsa_raw.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_alsa_raw.lo -MD -MP -MF "$(DEPDIR)/midi_alsa_raw.Tpo" -c -o midi_alsa_raw.lo `test -f 'midi/midi_alsa_raw.c' || echo '$(srcdir)/'`midi/midi_alsa_raw.c; \
	then mv -f "$(DEPDIR)/midi_alsa_raw.Tpo" "$(DEPDIR)/midi_alsa_raw.Plo"; else rm -f "$(DEPDIR)/midi_alsa_raw.Tpo"; exit 1; fi
#	source='midi/midi_alsa_raw.c' object='midi_alsa_raw.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_alsa_raw.Plo' tmpdepfile='$(DEPDIR)/midi_alsa_raw.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_alsa_raw.lo `test -f 'midi/midi_alsa_raw.c' || echo '$(srcdir)/'`midi/midi_alsa_raw.c

midi_file.o: midi/midi_file.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_file.o -MD -MP -MF "$(DEPDIR)/midi_file.Tpo" -c -o midi_file.o `test -f 'midi/midi_file.c' || echo '$(srcdir)/'`midi/midi_file.c; \
	then mv -f "$(DEPDIR)/midi_file.Tpo" "$(DEPDIR)/midi_file.Po"; else rm -f "$(DEPDIR)/midi_file.Tpo"; exit 1; fi
#	source='midi/midi_file.c' object='midi_file.o' libtool=no \
#	depfile='$(DEPDIR)/midi_file.Po' tmpdepfile='$(DEPDIR)/midi_file.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_file.o `test -f 'midi/midi_file.c' || echo '$(srcdir)/'`midi/midi_file.c

midi_file.obj: midi/midi_file.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_file.obj -MD -MP -MF "$(DEPDIR)/midi_file.Tpo" -c -o midi_file.obj `if test -f 'midi/midi_file.c'; then $(CYGPATH_W) 'midi/midi_file.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_file.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_file.Tpo" "$(DEPDIR)/midi_file.Po"; else rm -f "$(DEPDIR)/midi_file.Tpo"; exit 1; fi
#	source='midi/midi_file.c' object='midi_file.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_file.Po' tmpdepfile='$(DEPDIR)/midi_file.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_file.obj `if test -f 'midi/midi_file.c'; then $(CYGPATH_W) 'midi/midi_file.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_file.c'; fi`

midi_file.lo: midi/midi_file.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_file.lo -MD -MP -MF "$(DEPDIR)/midi_file.Tpo" -c -o midi_file.lo `test -f 'midi/midi_file.c' || echo '$(srcdir)/'`midi/midi_file.c; \
	then mv -f "$(DEPDIR)/midi_file.Tpo" "$(DEPDIR)/midi_file.Plo"; else rm -f "$(DEPDIR)/midi_file.Tpo"; exit 1; fi
#	source='midi/midi_file.c' object='midi_file.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_file.Plo' tmpdepfile='$(DEPDIR)/midi_file.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_file.lo `test -f 'midi/midi_file.c' || echo '$(srcdir)/'`midi/midi_file.c

midi_event.o: midi/midi_event.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_event.o -MD -MP -MF "$(DEPDIR)/midi_event.Tpo" -c -o midi_event.o `test -f 'midi/midi_event.c' || echo '$(srcdir)/'`midi/midi_event.c; \
	then mv -f "$(DEPDIR)/midi_event.Tpo" "$(DEPDIR)/midi_event.Po"; else rm -f "$(DEPDIR)/midi_event.Tpo"; exit 1; fi
#	source='midi/midi_event.c' object='midi_event.o' libtool=no \
#	depfile='$(DEPDIR)/midi_event.Po' tmpdepfile='$(DEPDIR)/midi_event.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_event.o `test -f 'midi/midi_event.c' || echo '$(srcdir)/'`midi/midi_event.c

midi_event.obj: midi/midi_event.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_event.obj -MD -MP -MF "$(DEPDIR)/midi_event.Tpo" -c -o midi_event.obj `if test -f 'midi/midi_event.c'; then $(CYGPATH_W) 'midi/midi_event.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_event.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_event.Tpo" "$(DEPDIR)/midi_event.Po"; else rm -f "$(DEPDIR)/midi_event.Tpo"; exit 1; fi
#	source='midi/midi_event.c' object='midi_event.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_event.Po' tmpdepfile='$(DEPDIR)/midi_event.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_event.obj `if test -f 'midi/midi_event.c'; then $(CYGPATH_W) 'midi/midi_event.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_event.c'; fi`

midi_event.lo: midi/midi_event.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_event.lo -MD -MP -MF "$(DEPDIR)/midi_event.Tpo" -c -o midi_event.lo `test -f 'midi/midi_event.c' || echo '$(srcdir)/'`midi/midi_event.c; \
	then mv -f "$(DEPDIR)/midi_event.Tpo" "$(DEPDIR)/midi_event.Plo"; else rm -f "$(DEPDIR)/midi_event.Tpo"; exit 1; fi
#	source='midi/midi_event.c' object='midi_event.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_event.Plo' tmpdepfile='$(DEPDIR)/midi_event.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_event.lo `test -f 'midi/midi_event.c' || echo '$(srcdir)/'`midi/midi_event.c

midi_track.o: midi/midi_track.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_track.o -MD -MP -MF "$(DEPDIR)/midi_track.Tpo" -c -o midi_track.o `test -f 'midi/midi_track.c' || echo '$(srcdir)/'`midi/midi_track.c; \
	then mv -f "$(DEPDIR)/midi_track.Tpo" "$(DEPDIR)/midi_track.Po"; else rm -f "$(DEPDIR)/midi_track.Tpo"; exit 1; fi
#	source='midi/midi_track.c' object='midi_track.o' libtool=no \
#	depfile='$(DEPDIR)/midi_track.Po' tmpdepfile='$(DEPDIR)/midi_track.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_track.o `test -f 'midi/midi_track.c' || echo '$(srcdir)/'`midi/midi_track.c

midi_track.obj: midi/midi_track.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_track.obj -MD -MP -MF "$(DEPDIR)/midi_track.Tpo" -c -o midi_track.obj `if test -f 'midi/midi_track.c'; then $(CYGPATH_W) 'midi/midi_track.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_track.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_track.Tpo" "$(DEPDIR)/midi_track.Po"; else rm -f "$(DEPDIR)/midi_track.Tpo"; exit 1; fi
#	source='midi/midi_track.c' object='midi_track.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_track.Po' tmpdepfile='$(DEPDIR)/midi_track.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_track.obj `if test -f 'midi/midi_track.c'; then $(CYGPATH_W) 'midi/midi_track.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_track.c'; fi`

midi_track.lo: midi/midi_track.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_track.lo -MD -MP -MF "$(DEPDIR)/midi_track.Tpo" -c -o midi_track.lo `test -f 'midi/midi_track.c' || echo '$(srcdir)/'`midi/midi_track.c; \
	then mv -f "$(DEPDIR)/midi_track.Tpo" "$(DEPDIR)/midi_track.Plo"; else rm -f "$(DEPDIR)/midi_track.Tpo"; exit 1; fi
#	source='midi/midi_track.c' object='midi_track.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_track.Plo' tmpdepfile='$(DEPDIR)/midi_track.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_track.lo `test -f 'midi/midi_track.c' || echo '$(srcdir)/'`midi/midi_track.c

midi_player.o: midi/midi_player.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_player.o -MD -MP -MF "$(DEPDIR)/midi_player.Tpo" -c -o midi_player.o `test -f 'midi/midi_player.c' || echo '$(srcdir)/'`midi/midi_player.c; \
	then mv -f "$(DEPDIR)/midi_player.Tpo" "$(DEPDIR)/midi_player.Po"; else rm -f "$(DEPDIR)/midi_player.Tpo"; exit 1; fi
#	source='midi/midi_player.c' object='midi_player.o' libtool=no \
#	depfile='$(DEPDIR)/midi_player.Po' tmpdepfile='$(DEPDIR)/midi_player.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_player.o `test -f 'midi/midi_player.c' || echo '$(srcdir)/'`midi/midi_player.c

midi_player.obj: midi/midi_player.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_player.obj -MD -MP -MF "$(DEPDIR)/midi_player.Tpo" -c -o midi_player.obj `if test -f 'midi/midi_player.c'; then $(CYGPATH_W) 'midi/midi_player.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_player.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_player.Tpo" "$(DEPDIR)/midi_player.Po"; else rm -f "$(DEPDIR)/midi_player.Tpo"; exit 1; fi
#	source='midi/midi_player.c' object='midi_player.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_player.Po' tmpdepfile='$(DEPDIR)/midi_player.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_player.obj `if test -f 'midi/midi_player.c'; then $(CYGPATH_W) 'midi/midi_player.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_player.c'; fi`

midi_player.lo: midi/midi_player.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_player.lo -MD -MP -MF "$(DEPDIR)/midi_player.Tpo" -c -o midi_player.lo `test -f 'midi/midi_player.c' || echo '$(srcdir)/'`midi/midi_player.c; \
	then mv -f "$(DEPDIR)/midi_player.Tpo" "$(DEPDIR)/midi_player.Plo"; else rm -f "$(DEPDIR)/midi_player.Tpo"; exit 1; fi
#	source='midi/midi_player.c' object='midi_player.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_player.Plo' tmpdepfile='$(DEPDIR)/midi_player.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_player.lo `test -f 'midi/midi_player.c' || echo '$(srcdir)/'`midi/midi_player.c

midi_parser.o: midi/midi_parser.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_parser.o -MD -MP -MF "$(DEPDIR)/midi_parser.Tpo" -c -o midi_parser.o `test -f 'midi/midi_parser.c' || echo '$(srcdir)/'`midi/midi_parser.c; \
	then mv -f "$(DEPDIR)/midi_parser.Tpo" "$(DEPDIR)/midi_parser.Po"; else rm -f "$(DEPDIR)/midi_parser.Tpo"; exit 1; fi
#	source='midi/midi_parser.c' object='midi_parser.o' libtool=no \
#	depfile='$(DEPDIR)/midi_parser.Po' tmpdepfile='$(DEPDIR)/midi_parser.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_parser.o `test -f 'midi/midi_parser.c' || echo '$(srcdir)/'`midi/midi_parser.c

midi_parser.obj: midi/midi_parser.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_parser.obj -MD -MP -MF "$(DEPDIR)/midi_parser.Tpo" -c -o midi_parser.obj `if test -f 'midi/midi_parser.c'; then $(CYGPATH_W) 'midi/midi_parser.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_parser.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_parser.Tpo" "$(DEPDIR)/midi_parser.Po"; else rm -f "$(DEPDIR)/midi_parser.Tpo"; exit 1; fi
#	source='midi/midi_parser.c' object='midi_parser.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_parser.Po' tmpdepfile='$(DEPDIR)/midi_parser.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_parser.obj `if test -f 'midi/midi_parser.c'; then $(CYGPATH_W) 'midi/midi_parser.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_parser.c'; fi`

midi_parser.lo: midi/midi_parser.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_parser.lo -MD -MP -MF "$(DEPDIR)/midi_parser.Tpo" -c -o midi_parser.lo `test -f 'midi/midi_parser.c' || echo '$(srcdir)/'`midi/midi_parser.c; \
	then mv -f "$(DEPDIR)/midi_parser.Tpo" "$(DEPDIR)/midi_parser.Plo"; else rm -f "$(DEPDIR)/midi_parser.Tpo"; exit 1; fi
#	source='midi/midi_parser.c' object='midi_parser.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_parser.Plo' tmpdepfile='$(DEPDIR)/midi_parser.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_parser.lo `test -f 'midi/midi_parser.c' || echo '$(srcdir)/'`midi/midi_parser.c

midi_driver.o: midi/midi_driver.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_driver.o -MD -MP -MF "$(DEPDIR)/midi_driver.Tpo" -c -o midi_driver.o `test -f 'midi/midi_driver.c' || echo '$(srcdir)/'`midi/midi_driver.c; \
	then mv -f "$(DEPDIR)/midi_driver.Tpo" "$(DEPDIR)/midi_driver.Po"; else rm -f "$(DEPDIR)/midi_driver.Tpo"; exit 1; fi
#	source='midi/midi_driver.c' object='midi_driver.o' libtool=no \
#	depfile='$(DEPDIR)/midi_driver.Po' tmpdepfile='$(DEPDIR)/midi_driver.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_driver.o `test -f 'midi/midi_driver.c' || echo '$(srcdir)/'`midi/midi_driver.c

midi_driver.obj: midi/midi_driver.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_driver.obj -MD -MP -MF "$(DEPDIR)/midi_driver.Tpo" -c -o midi_driver.obj `if test -f 'midi/midi_driver.c'; then $(CYGPATH_W) 'midi/midi_driver.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_driver.c'; fi`; \
	then mv -f "$(DEPDIR)/midi_driver.Tpo" "$(DEPDIR)/midi_driver.Po"; else rm -f "$(DEPDIR)/midi_driver.Tpo"; exit 1; fi
#	source='midi/midi_driver.c' object='midi_driver.obj' libtool=no \
#	depfile='$(DEPDIR)/midi_driver.Po' tmpdepfile='$(DEPDIR)/midi_driver.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_driver.obj `if test -f 'midi/midi_driver.c'; then $(CYGPATH_W) 'midi/midi_driver.c'; else $(CYGPATH_W) '$(srcdir)/midi/midi_driver.c'; fi`

midi_driver.lo: midi/midi_driver.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT midi_driver.lo -MD -MP -MF "$(DEPDIR)/midi_driver.Tpo" -c -o midi_driver.lo `test -f 'midi/midi_driver.c' || echo '$(srcdir)/'`midi/midi_driver.c; \
	then mv -f "$(DEPDIR)/midi_driver.Tpo" "$(DEPDIR)/midi_driver.Plo"; else rm -f "$(DEPDIR)/midi_driver.Tpo"; exit 1; fi
#	source='midi/midi_driver.c' object='midi_driver.lo' libtool=yes \
#	depfile='$(DEPDIR)/midi_driver.Plo' tmpdepfile='$(DEPDIR)/midi_driver.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o midi_driver.lo `test -f 'midi/midi_driver.c' || echo '$(srcdir)/'`midi/midi_driver.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done
install-pkgincludemidiHEADERS: $(pkgincludemidi_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludemididir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludemididir)"
	@list='$(pkgincludemidi_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludemidiHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludemididir)/$$f'"; \
	  $(pkgincludemidiHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludemididir)/$$f"; \
	done

uninstall-pkgincludemidiHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgincludemidi_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(pkgincludemididir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludemididir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/midi
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkgincludemididir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS \
	install-pkgincludemidiHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS uninstall-pkgincludemidiHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pkgincludeHEADERS \
	install-pkgincludemidiHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS \
	uninstall-pkgincludemidiHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
